from flask import render_template, request, redirect, url_for, flash
from models import fetch_members_data, distinguish_user, print_all_movie, get_movie_by_title, sort_movie

def login_route(app):
    @app.route("/", methods=["GET", "POST"])
    def login():
        if request.method == "POST":
            input_id = request.form['user_id']
            input_password = request.form['password']

            members_data = fetch_members_data()

            for member in members_data:
                if input_id == member[0] and input_password == member[1]:
                    user_type = distinguish_user(input_id)
                    if user_type:
                        return redirect(url_for('dashboard', user_type=user_type, name=member[2], member_id = member[3] ))
                    else:
                        flash("User type could not be determined.")
                        return redirect(url_for('login'))

            flash("Login failed. ID and password do not match.")
            return redirect(url_for('login'))

        return render_template("login.html")

    @app.route("/dashboard/<user_type>/<name>/<int:member_id>")
    def dashboard(user_type, name, member_id):
        if user_type == "user":
            return render_template("user_function.html", name=name, member_id=member_id)
        elif user_type == "staff":
            return render_template("staff_function.html", name=name, member_id=member_id)
        elif user_type == "analyst":
            return render_template("analyst_function.html", name=name, member_id=member_id)
    @app.route("/movies/book/<name>/<int:member_id>")
    def book_movie(name, member_id):
        print(name, member_id)
        return nstr(member_id)
    @app.route('/movies/sort')
    def sort_movies():
        movies = sort_movie()
        return render_template('user/print_all_movies_1.html', movies = movies)


    @app.route('/movies')
    def view_movies():
        movies = print_all_movie()
        return render_template('user/print_all_movies_1.html', movies=movies)

    @app.route('/movies/search', methods=['GET', 'POST'])
    def print_movie_title():
        if request.method == 'POST':
            movie_title = request.form['movie_title']
            result = get_movie_by_title(movie_title)
            if not result:
                flash(f"'{movie_title}'에 해당하는 영화가 없습니다. 다시 검색해 주세요.")
                return redirect(url_for('print_movie_title'))
            else:
                return render_template('user/movie_title_results_2.html', movies=result, search_title=movie_title)

        return render_template('user/search_movie_2.html')
